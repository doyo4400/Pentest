#!/bin/bash

#########################################################################
#                                                                       #
#       Script for simplify auditing of website with basic test         #
#                                                                       #
#########################################################################


url_to_scan="google.com"
fullwebsite_adress="https://www.google.com"


#set location of script
path_of_report=$(pwd)"/"$(date +"%Y%m%d")"_audit_of_"$url_to_scan
mkdir $path_of_report


###########	Start audit	###########

#get request header
curl -v $url_to_scan | cut -f1 -d"<html>" > $path_of_report"/header.txt"

#get all page of website
mkdir $path_of_report"/website_offline"
gnome-terminal --title="wget website" --working-directory=$path_of_report"/website_offline" -- wget --recursive --no-parent $url_to_scan 


#List of certificate

##crt.sh
#gnome-terminal -- /bin/bash -c 'wget -p https://crt.sh/?q='$url_to_scan' -nd --default-page=crt_sh.html; mv $(ls | grep crt_sh.html*) "crt_sh.html"; rm -rf robots.txt'
gnome-terminal --title="Crt.sh" --working-directory=$path_of_report -- /bin/bash -c 'wget -p https://crt.sh/?q='$url' -nd --default-page=crt_sh.html; mv $(ls | grep crt_sh.html*) "crt_sh.html"; rm -rf robots.txt'

##SSL_Labs Qualys
gnome-terminal --title="SSLlabs Qualys" --working-directory=$path_of_report -- /bin/bash -c 'wget -p https://www.ssllabs.com/ssltest/analyze.html?d='$url_to_scan' -nd --default-page=sslabs.html; mv $(ls | grep sslabs.html*) "sslabs.html"; rm -rf robots.txt'

##Nmap certificate
gnome-terminal --title="Nmap certificate" --working-directory=$path_of_report -- nmap -sV --script ssl-enum-ciphers -p 443 $url_to_scan -oN $path_of_report"/ssl-enum-cipher.txt"


#get DNS
gnome-terminal -- dnsrecon -d $url_to_scan > $path_of_report"/dnsrecon.txt"


#nmap
gnome-terminal -- nmap -sS $url_to_scan -oN $path_of_report"/nmap.txt"


#sqlmap
gnome-terminal --title="SqlMap" -- sqlmap -u $url_to_scan* --tamper=space2comment --random-agent --level 3 --risk 3 > $path_of_report"/sqlmap.txt"

#Zaproxy baseline scan
gnome-terminal --working-directory=$path_of_report --title="Zaproxy baseline scan" -- /bin/bash -c 'docker run -v '$(pwd)':/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py -t '$fullwebsite_adress' -r zap_report_'$fullwebsite_adress'.html; rm -rf zap.yaml'

#Zaproxy full scan
gnome-terminal --working-directory=$path_of_report --title="Zaproxy full scan" -- /bin/bash -c 'docker run -v '$(pwd)':/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py -t '$fullwebsite_adress' -r zap_report_'$fullwebsite_adress'.html; rm -rf zap.yaml'


#export data
echo "This is IP to connect for get report : " $(ip addr | grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}")
gnome-terminal --title="Python webserver" -- python3 -m http.server 8000 --directory $path_of_report
